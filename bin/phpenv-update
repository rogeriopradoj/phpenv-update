#!/usr/bin/env bash
set -e
[ -n "$PHPENV_DEBUG" ] && set -x

indent_output() {
  while read data; do
    echo -e " \033[1;32m|\033[0m  $data"
  done
}

colorize_output() {
  while read data; do
    echo -e "\033[1;32m${data}\033[0m"
  done
}

is_phpenv_git_repo() {
  $(git remote -v | grep -E 'rbenv|phpenv|php-build' &>/dev/null)
}

phpenv_update() {
  echo -e "updating $1" | colorize_output
  if is_phpenv_git_repo; then
    if [ "$1" == "phpenv" ]; then
        PHPENV_LOCAL_REPO="$(phpenv root)/sources/phpenv"
        PHPENV_GITHUB_REPO="https://github.com/CHH/phpenv.git"
        [ -d $PHPENV_LOCAL_REPO ] || git clone $PHPENV_GITHUB_REPO $PHPENV_LOCAL_REPO 2>&1 | indent_output
        cd $PHPENV_LOCAL_REPO
        git pull --no-rebase --ff &>/dev/null
        if UPDATE=yes $PHPENV_LOCAL_REPO/bin/phpenv-install.sh &>/dev/null; then
            echo -e "Already up-to-date." | indent_output
        fi
    else
        git pull --no-rebase --ff 2>&1 | indent_output
    fi
  else
    echo -e "Not an phpenv git repo; skipping..." | indent_output
  fi
  echo
}

phpenv_update phpenv
eval "$(phpenv init -)"

cd "${PHPENV_ROOT:-$(phpenv root)}"
for plugin in plugins/*; do
  pushd $plugin >/dev/null
  phpenv_update `basename $plugin`
  popd >/dev/null
done